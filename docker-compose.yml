services:
  simpleidentity:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: simpleidentity
    restart: unless-stopped
    ports:
      - "8080:8080"  # Health checks
      - "8090:8090"  # HTTP API  
      - "9091:9091"  # gRPC API
      - "6060:6060"  # pprof (development only)
    environment:
      # Service Configuration
      SMPIDT_LOG_LEVEL: debug
      SMPIDT_LOG_PRETTY: "false"
      SMPIDT_TELEMETRY_ENVIRONMENT: development
      SMPIDT_VERSION: "1.0.0-docker"
      
      # OpenTelemetry Configuration
      SMPIDT_TELEMETRY_ENABLED: "true"
      SMPIDT_METRICS_ENABLED: "true"
      SMPIDT_TRACING_ENABLED: "true"
      SMPIDT_METRICS_ENDPOINT: "otel-collector:4318"  # Send metrics to OTEL collector
      SMPIDT_TRACING_ENDPOINT: "jaeger:4318"          # Send traces to Jaeger
      SMPIDT_METRICS_PROTOCOL: "http"
      SMPIDT_TRACING_PROTOCOL: "http"
      SMPIDT_OTLP_INSECURE: "true"
      
    networks:
      - simpleidentity-net
    depends_on:
      - jaeger
      - otel-collector
    healthcheck:
      test: ["CMD", "/usr/local/bin/simpleidentity", "health", "--addr", "localhost:8080"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 10s

  # Jaeger - Distributed Tracing
  jaeger:
    image: jaegertracing/all-in-one:1.51
    container_name: jaeger
    restart: unless-stopped
    ports:
      - "16686:16686"  # Jaeger UI
      - "4317:4317"    # OTLP gRPC
      - "4318:4318"    # OTLP HTTP
    environment:
      COLLECTOR_OTLP_ENABLED: "true"
      LOG_LEVEL: info
    networks:
      - simpleidentity-net

  # OpenTelemetry Collector - Metrics and Traces Gateway
  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.91.0
    container_name: otel-collector
    restart: unless-stopped
    ports:
      - "4319:4318"    # OTLP HTTP (different external port to avoid conflict)
      - "4320:4317"    # OTLP gRPC (different external port to avoid conflict)
    volumes:
      - ./deployments/otel-collector/config.yaml:/etc/otelcol-contrib/config.yaml:ro
    networks:
      - simpleidentity-net
    depends_on:
      - jaeger
      - prometheus

  # Prometheus - Metrics Collection
  prometheus:
    image: prom/prometheus:v2.48.0
    container_name: prometheus
    restart: unless-stopped
    ports:
      - "9090:9090"   # Note: conflicts with gRPC port, use 9091 for gRPC in dev
    volumes:
      - ./deployments/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - simpleidentity-net

  # Grafana - Metrics Visualization
  grafana:
    image: grafana/grafana:10.2.0
    container_name: grafana
    restart: unless-stopped
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin123
      GF_USERS_ALLOW_SIGN_UP: "false"
    volumes:
      - grafana_data:/var/lib/grafana
      - ./deployments/grafana/datasources:/etc/grafana/provisioning/datasources:ro
      - ./deployments/grafana/dashboards:/etc/grafana/provisioning/dashboards:ro
    networks:
      - simpleidentity-net
    depends_on:
      - prometheus

networks:
  simpleidentity-net:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local
